{"version":3,"file":"vue-trix.esm.js","sources":["../src/mixins/EmitFileAccept.js","../src/mixins/EmitInitialize.js","../src/mixins/EmitAttachmentAdd.js","../src/mixins/EmitSelectionChange.js","../src/mixins/EmitAttachmentRemove.js","../src/mixins/EmitBeforeInitialize.js","../src/mixins/ProcessEditorFocusAndBlur.js","../src/components/VueTrix.vue","../src/index.js"],"sourcesContent":["/**\r\n *\r\n * @param {*} component\r\n */\r\nexport default function (component) {\r\n  return {\r\n    methods: {\r\n      emitFileAccept (file) {\r\n        this.$emit('trix-file-accept', file)\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n *\r\n * @param {*} component\r\n */\r\nexport default function (component) {\r\n  return {\r\n    methods: {\r\n      emitInitialize (editor) {\r\n        this.$emit('trix-initialize', this.$refs.trix.editor, event)\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n *\r\n * @param {*} component\r\n */\r\nexport default function (component) {\r\n  return {\r\n    methods: {\r\n      emitAttachmentAdd (file) {\r\n        this.$emit('trix-attachment-add', file)\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n *\r\n * @param {*} component\r\n */\r\nexport default function (component) {\r\n  return {\r\n    methods: {\r\n      emitSelectionChange (event) {\r\n        this.$emit('trix-selection-change', this.$refs.trix.editor, event)\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n *\r\n * @param {*} component\r\n */\r\nexport default function (component) {\r\n  return {\r\n    methods: {\r\n      emitAttachmentRemove (file) {\r\n        this.$emit('trix-attachment-remove', file)\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n *\r\n * @param {*} component\r\n */\r\nexport default function (component) {\r\n  return {\r\n    methods: {\r\n      emitBeforeInitialize (event) {\r\n        this.$emit('trix-before-initialize', this.$refs.trix.editor, event)\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default function (component) {\r\n  return {\r\n    methods: {\r\n      processTrixFocus (event) {\r\n        if (this.$refs.trix) {\r\n          this.isActived = true\r\n          this.$emit('trix-focus', this.$refs.trix.editor, event)\r\n        }\r\n      },\r\n      processTrixBlur (event) {\r\n        if (this.$refs.trix) {\r\n          this.isActived = false\r\n          this.$emit('trix-blur', this.$refs.trix.editor, event)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","<template>\r\n  <div :class=\"[$style.trix_container]\">\r\n    <trix-editor\r\n      :contenteditable=\"!disabledEditor\"\r\n      :class=\"['trix-content']\"\r\n      ref=\"trix\"\r\n      :input=\"computedId\"\r\n      :placeholder=\"placeholder\"\r\n      @trix-change=\"handleContentChange\"\r\n      @trix-file-accept=\"emitFileAccept\"\r\n      @trix-attachment-add=\"emitAttachmentAdd\"\r\n      @trix-attachment-remove=\"emitAttachmentRemove\"\r\n      @trix-selection-change=\"emitSelectionChange\"\r\n      @trix-initialize=\"emitInitialize\"\r\n      @trix-before-initialize=\"emitBeforeInitialize\"\r\n      @trix-focus=\"processTrixFocus\"\r\n      @trix-blur=\"processTrixBlur\"\r\n    />\r\n    <input\r\n      type=\"hidden\"\r\n      :name=\"inputName\"\r\n      :id=\"computedId\"\r\n      :value=\"editorContent\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'trix'\r\nimport 'trix/dist/trix.css'\r\nimport EmitFileAccept from '../mixins/EmitFileAccept.js'\r\nimport EmitInitialize from '../mixins/EmitInitialize.js'\r\nimport EmitAttachmentAdd from '../mixins/EmitAttachmentAdd.js'\r\nimport EmitSelectionChange from '../mixins/EmitSelectionChange.js'\r\nimport EmitAttachmentRemove from '../mixins/EmitAttachmentRemove.js'\r\nimport EmitBeforeInitialize from '../mixins/EmitBeforeInitialize.js'\r\nimport ProcessEditorFocusAndBlur from '../mixins/ProcessEditorFocusAndBlur.js'\r\n\r\nexport default {\r\n  name: 'VueTrix',\r\n  mixins: [\r\n    EmitFileAccept(),\r\n    EmitInitialize(),\r\n    EmitAttachmentAdd(),\r\n    EmitSelectionChange(),\r\n    EmitAttachmentRemove(),\r\n    EmitBeforeInitialize(),\r\n    ProcessEditorFocusAndBlur()\r\n  ],\r\n  model: {\r\n    prop: 'srcContent',\r\n    event: 'update'\r\n  },\r\n  props: {\r\n    /**\r\n     * This prop will put the editor in read-only mode\r\n     */\r\n    disabledEditor: {\r\n      type: Boolean,\r\n      required: false,\r\n      default () {\r\n        return false\r\n      }\r\n    },\r\n    /**\r\n     * This is referenced `id` of the hidden input field defined.\r\n     * It is optional and will be a random string by default.\r\n     */\r\n    inputId: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return ''\r\n      }\r\n    },\r\n    /**\r\n     * This is referenced `name` of the hidden input field defined,\r\n     * default value is `content`.\r\n     */\r\n    inputName: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return 'content'\r\n      }\r\n    },\r\n    /**\r\n     * The placeholder attribute specifies a short hint\r\n     * that describes the expected value of a editor.\r\n     */\r\n    placeholder: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return ''\r\n      }\r\n    },\r\n    /**\r\n     * The source content is associcated to v-model directive.\r\n     */\r\n    srcContent: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return ''\r\n      }\r\n    },\r\n    /**\r\n     * The boolean attribute allows saving editor state into browser's localStorage\r\n     * (optional, default is `false`).\r\n     */\r\n    localStorage: {\r\n      type: Boolean,\r\n      required: false,\r\n      default () {\r\n        return false\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    /**\r\n     *  If localStorage is enabled,\r\n     *  then load editor's content from the beginning.\r\n     */\r\n    if (this.localStorage) {\r\n      const savedValue = localStorage.getItem(this.storageId('VueTrix'))\r\n      if (savedValue && !this.srcContent) {\r\n        this.$refs.trix.editor.loadJSON(JSON.parse(savedValue))\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    /** Check if editor read-only mode is required */\r\n    this.decorateDisabledEditor()\r\n  },\r\n  data () {\r\n    return {\r\n      editorContent: this.srcContent,\r\n      isActived: null\r\n    }\r\n  },\r\n  methods: {\r\n    handleContentChange (event) {\r\n      this.editorContent = event.srcElement ? event.srcElement.value : event.target.value\r\n      this.$emit('input', this.editorContent)\r\n    },\r\n    handleInitialContentChange (newContent, oldContent) {\r\n      newContent = newContent === undefined ? '' : newContent\r\n\r\n      if (this.$refs.trix.editor.innerHTML !== newContent) {\r\n        /* Update editor's content when initial content changed */\r\n        this.editorContent = newContent\r\n\r\n        /**\r\n         *  If user are typing, then don't reload the editor,\r\n         *  hence keep cursor's position after typing.\r\n         */\r\n        if (!this.isActived) {\r\n          this.reloadEditorContent(this.editorContent)\r\n        }\r\n      }\r\n    },\r\n    emitEditorState (value) {\r\n      /**\r\n       * If localStorage is enabled,\r\n       * then save editor's content into storage\r\n       */\r\n      if (this.localStorage) {\r\n        localStorage.setItem(\r\n          this.storageId('VueTrix'),\r\n          JSON.stringify(this.$refs.trix.editor)\r\n        )\r\n      }\r\n      this.$emit('update', this.editorContent)\r\n    },\r\n    storageId (component) {\r\n      if (this.inputId) {\r\n        return `${component}.${this.inputId}.content`\r\n      } else {\r\n        return `${component}.content`\r\n      }\r\n    },\r\n    reloadEditorContent (newContent) {\r\n      // Reload HTML content\r\n      this.$refs.trix.editor.loadHTML(newContent)\r\n\r\n      // Move cursor to end of new content updated\r\n      this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())\r\n    },\r\n    getContentEndPosition () {\r\n      return this.$refs.trix.editor.getDocument().toString().length - 1\r\n    },\r\n    decorateDisabledEditor () {\r\n      /** Disable toolbar and editor by pointer events styling */\r\n      if (this.disabledEditor) {\r\n        this.$refs.trix.toolbarElement.style['pointer-events'] = 'none'\r\n        this.$refs.trix.style['pointer-events'] = 'none'\r\n        this.$refs.trix.style['background'] = '#e9ecef'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * Compute a random id of hidden input\r\n     * when it haven't been specified.\r\n     */\r\n    generateId () {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        var r = Math.random() * 16 | 0\r\n        var v = c === 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n      })\r\n    },\r\n    computedId () {\r\n      return this.inputId || this.generateId\r\n    },\r\n    initialContent () {\r\n      return this.srcContent\r\n    }\r\n  },\r\n  watch: {\r\n    editorContent: {\r\n      handler: 'emitEditorState'\r\n    },\r\n    initialContent: {\r\n      handler: 'handleInitialContentChange'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" module>\r\n.trix_container {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n.trix_container .trix-button-group {\r\n  background-color: white;\r\n}\r\n.trix_container .trix-content {\r\n  background-color: white;\r\n}\r\n</style>\r\n","/*\r\n * Vue-Trix index.js\r\n * Author: tranduchanh.ms@gmail.com\r\n * Github: https://github.com/hanhdt/vue-trix\r\n */\r\n\r\nimport Vue from 'vue'\r\nimport VueTrix from './components/VueTrix.vue'\r\nVue.config.ignoredElements = ['trix-editor']\r\n\r\nVue.component(VueTrix.name, VueTrix)\r\n\r\nexport default VueTrix\r\n"],"names":["const"],"mappings":";;;;;;;;;AAAA;;;;AAIA,AAAe,yBAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,uCAAc,EAAE,IAAI,EAAE;QACpB,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,EAAC;OACrC;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,yBAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,uCAAc,EAAE,MAAM,EAAE;QACtB,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;OAC7D;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,4BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,6CAAiB,EAAE,IAAI,EAAE;QACvB,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,IAAI,EAAC;OACxC;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,8BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,iDAAmB,EAAE,KAAK,EAAE;QAC1B,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;OACnE;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,+BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,mDAAoB,EAAE,IAAI,EAAE;QAC1B,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,IAAI,EAAC;OAC3C;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,+BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,mDAAoB,EAAE,KAAK,EAAE;QAC3B,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;OACpE;KACF;GACF;CACF;;ACZc,oCAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,2CAAgB,EAAE,KAAK,EAAE;QACvB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;UACnB,IAAI,CAAC,SAAS,GAAG,KAAI;UACrB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;SACxD;OACF;MACD,yCAAe,EAAE,KAAK,EAAE;QACtB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;UACnB,IAAI,CAAC,SAAS,GAAG,MAAK;UACtB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;SACvD;OACF;KACF;GACF;CACF;;;;ACqBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtCA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;;AAQA,GAAG,CAAC,MAAM,CAAC,eAAe,GAAG,CAAC,aAAa,EAAC;;AAE5C,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;;;;"}