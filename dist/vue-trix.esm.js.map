{"version":3,"file":"vue-trix.esm.js","sources":["../src/mixins/EmitFileAccept.js","../src/mixins/EmitInitialize.js","../src/mixins/EmitAttachmentAdd.js","../src/mixins/EmitSelectionChange.js","../src/mixins/EmitAttachmentRemove.js","../src/mixins/EmitBeforeInitialize.js","../src/mixins/ProcessEditorFocusAndBlur.js","../src/components/VueTrix.vue","../src/index.js"],"sourcesContent":["/**\n *\n * @param {*} component\n */\nexport default function (component) {\n  return {\n    methods: {\n      emitFileAccept (file) {\n        this.$emit('trix-file-accept', file)\n      }\n    }\n  }\n}\n","/**\n *\n * @param {*} component\n */\nexport default function (component) {\n  return {\n    methods: {\n      emitInitialize (editor) {\n        this.$emit('trix-initialize', this.$refs.trix.editor, event)\n      }\n    }\n  }\n}\n","/**\n *\n * @param {*} component\n */\nexport default function (component) {\n  return {\n    methods: {\n      emitAttachmentAdd (file) {\n        this.$emit('trix-attachment-add', file)\n      }\n    }\n  }\n}\n","/**\n *\n * @param {*} component\n */\nexport default function (component) {\n  return {\n    methods: {\n      emitSelectionChange (event) {\n        this.$emit('trix-selection-change', this.$refs.trix.editor, event)\n      }\n    }\n  }\n}\n","/**\n *\n * @param {*} component\n */\nexport default function (component) {\n  return {\n    methods: {\n      emitAttachmentRemove (file) {\n        this.$emit('trix-attachment-remove', file)\n      }\n    }\n  }\n}\n","/**\n *\n * @param {*} component\n */\nexport default function (component) {\n  return {\n    methods: {\n      emitBeforeInitialize (event) {\n        this.$emit('trix-before-initialize', this.$refs.trix.editor, event)\n      }\n    }\n  }\n}\n","export default function (component) {\n  return {\n    methods: {\n      processTrixFocus (event) {\n        if (this.$refs.trix) {\n          this.isActived = true\n          this.$emit('trix-focus', this.$refs.trix.editor, event)\n        }\n      },\n      processTrixBlur (event) {\n        if (this.$refs.trix) {\n          this.isActived = false\n          this.$emit('trix-blur', this.$refs.trix.editor, event)\n        }\n      }\n    }\n  }\n}\n","<template>\n  <div :class=\"[$style.trix_container]\">\n    <trix-editor\n      :contenteditable=\"!disabledEditor\"\n      :class=\"['trix-content']\"\n      ref=\"trix\"\n      :input=\"inputId || generateId\"\n      :placeholder=\"placeholder\"\n      @trix-change=\"handleContentChange\"\n      @trix-file-accept=\"emitFileAccept\"\n      @trix-attachment-add=\"emitAttachmentAdd\"\n      @trix-attachment-remove=\"emitAttachmentRemove\"\n      @trix-selection-change=\"emitSelectionChange\"\n      @trix-initialize=\"emitInitialize\"\n      @trix-before-initialize=\"emitBeforeInitialize\"\n      @trix-focus=\"processTrixFocus\"\n      @trix-blur=\"processTrixBlur\"\n    />\n    <input\n      type=\"hidden\"\n      :name=\"inputName\"\n      :id=\"inputId || generateId\"\n      :value=\"editorContent\"\n    >\n  </div>\n</template>\n\n<script>\nimport 'trix'\nimport 'trix/dist/trix.css'\nimport EmitFileAccept from '../mixins/EmitFileAccept.js'\nimport EmitInitialize from '../mixins/EmitInitialize.js'\nimport EmitAttachmentAdd from '../mixins/EmitAttachmentAdd.js'\nimport EmitSelectionChange from '../mixins/EmitSelectionChange.js'\nimport EmitAttachmentRemove from '../mixins/EmitAttachmentRemove.js'\nimport EmitBeforeInitialize from '../mixins/EmitBeforeInitialize.js'\nimport ProcessEditorFocusAndBlur from '../mixins/ProcessEditorFocusAndBlur.js'\n\nexport default {\n  name: 'VueTrix',\n  mixins: [\n    EmitFileAccept(),\n    EmitInitialize(),\n    EmitAttachmentAdd(),\n    EmitSelectionChange(),\n    EmitAttachmentRemove(),\n    EmitBeforeInitialize(),\n    ProcessEditorFocusAndBlur()\n  ],\n  model: {\n    prop: 'srcContent',\n    event: 'update'\n  },\n  props: {\n    /** \n     * This prop will put the editor in read-only mode\n     */\n    disabledEditor: {\n      type: Boolean,\n      required: false,\n      default () {\n        return false\n      }\n    },\n    /**\n     * This is referenced `id` of the hidden input field defined.\n     * It is optional and will be a random string by default.\n     */\n    inputId: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * This is referenced `name` of the hidden input field defined,\n     * default value is `content`.\n     */\n    inputName: {\n      type: String,\n      required: false,\n      default () {\n        return 'content'\n      }\n    },\n    /**\n     * The placeholder attribute specifies a short hint\n     * that describes the expected value of a editor.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * The source content is associcated to v-model directive.\n     */\n    srcContent: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * The boolean attribute allows saving editor state into browser's localStorage\n     * (optional, default is `false`).\n     */\n    localStorage: {\n      type: Boolean,\n      required: false,\n      default () {\n        return false\n      }\n    }\n  },\n  created () {\n    /**\n     *  If localStorage is enabled,\n     *  then load editor's content from the beginning.\n     */\n    if (this.localStorage) {\n      const savedValue = localStorage.getItem(this.storageId('VueTrix'))\n      if (savedValue && !this.srcContent) {\n        this.$refs.trix.editor.loadJSON(JSON.parse(savedValue))\n      }\n    }\n  },\n  mounted () {\n    /** Check if editor read-only mode is required */\n    this.decorateDisabledEditor()\n  },\n  data () {\n    return {\n      editorContent: this.srcContent,\n      isActived: null\n    }\n  },\n  methods: {\n    handleContentChange (event) {\n      this.editorContent = event.srcElement ? event.srcElement.value : event.target.value\n      this.$emit('input', this.editorContent)\n    },\n    handleInitialContentChange (newContent, oldContent) {\n      newContent = newContent === undefined ? '' : newContent\n\n      if (this.$refs.trix.editor.innerHTML !== newContent) {\n        /* Update editor's content when initial content changed */\n        this.editorContent = newContent\n\n        /** \n         *  If user are typing, then don't reload the editor,\n         *  hence keep cursor's position after typing.\n         */\n        if (!this.isActived) {\n          this.reloadEditorContent(this.editorContent)\n        }\n      }\n    },\n    emitEditorState (value) {\n      /**\n       * If localStorage is enabled,\n       * then save editor's content into storage\n       */\n      if (this.localStorage) {\n        localStorage.setItem(\n          this.storageId('VueTrix'),\n          JSON.stringify(this.$refs.trix.editor)\n        )\n      }\n      this.$emit('update', this.editorContent)\n    },\n    storageId (component) {\n      if (this.inputId) {\n        return `${component}.${this.inputId}.content`\n      } else {\n        return `${component}.content`\n      }\n    },\n    reloadEditorContent (newContent) {\n      // Reload HTML content\n      this.$refs.trix.editor.loadHTML(newContent)\n\n      // Move cursor to end of new content updated\n      this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())\n    },\n    getContentEndPosition () {\n      return this.$refs.trix.editor.getDocument().toString().length - 1\n    },\n    decorateDisabledEditor () {\n      /** Disable toolbar and editor by pointer events styling */\n      if (this.disabledEditor) {\n        document.querySelector('trix-toolbar').style['pointer-events'] = 'none'\n        document.querySelector('trix-editor').style['pointer-events'] = 'none'\n        document.querySelector('trix-editor').style['background'] = '#ecf0f1'\n      }\n    }\n  },\n  computed: {\n    /**\n     * Compute a random id of hidden input\n     * when it haven't been specified.\n     */\n    generateId () {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = Math.random() * 16 | 0\n        var v = c === 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n      })\n    },\n    initialContent () {\n      return this.srcContent\n    }\n  },\n  watch: {\n    editorContent: {\n      handler: 'emitEditorState'\n    },\n    initialContent: {\n      handler: 'handleInitialContentChange'\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" module>\n.trix_container {\n  max-width: 100%;\n  height: auto;\n}\n.trix_container .trix-button-group {\n  background-color: white;\n}\n.trix_container .trix-content {\n  background-color: white;\n}\n</style>\n","/*\n * Vue-Trix index.js\n * Author: tranduchanh.ms@gmail.com\n * Github: https://github.com/hanhdt/vue-trix\n */\n\nimport Vue from 'vue'\nimport VueTrix from './components/VueTrix.vue'\nVue.config.ignoredElements = ['trix-editor']\n\nVue.component(VueTrix.name, VueTrix)\n\nexport default VueTrix\n"],"names":["const"],"mappings":";;;;;AAAA;;;;AAIA,AAAe,yBAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,uCAAc,EAAE,IAAI,EAAE;QACpB,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,EAAC;OACrC;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,yBAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,uCAAc,EAAE,MAAM,EAAE;QACtB,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;OAC7D;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,4BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,6CAAiB,EAAE,IAAI,EAAE;QACvB,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,IAAI,EAAC;OACxC;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,8BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,iDAAmB,EAAE,KAAK,EAAE;QAC1B,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;OACnE;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,+BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,mDAAoB,EAAE,IAAI,EAAE;QAC1B,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,IAAI,EAAC;OAC3C;KACF;GACF;CACF;;ACZD;;;;AAIA,AAAe,+BAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,mDAAoB,EAAE,KAAK,EAAE;QAC3B,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;OACpE;KACF;GACF;CACF;;ACZc,oCAAU,SAAS,EAAE;EAClC,OAAO;IACL,OAAO,EAAE;MACP,2CAAgB,EAAE,KAAK,EAAE;QACvB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;UACnB,IAAI,CAAC,SAAS,GAAG,KAAI;UACrB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;SACxD;OACF;MACD,yCAAe,EAAE,KAAK,EAAE;QACtB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;UACnB,IAAI,CAAC,SAAS,GAAG,MAAK;UACtB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC;SACvD;OACF;KACF;GACF;CACF;;;;ACqBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtCA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;;AAQA,GAAG,CAAC,MAAM,CAAC,eAAe,GAAG,CAAC,aAAa,EAAC;;AAE5C,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;;;;"}