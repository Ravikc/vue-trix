var VueTrix=function(t,e,n,r,i){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t,r=r&&r.hasOwnProperty("default")?r.default:r,i=i&&i.hasOwnProperty("default")?i.default:i;function o(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{class:[t.$style.trix_container]},[n("trix-editor",{ref:"trix",class:["trix-content"],attrs:{contenteditable:!t.disabledEditor,input:t.computedId,placeholder:t.placeholder},on:{"trix-change":t.handleContentChange,"trix-file-accept":t.emitFileAccept,"trix-attachment-add":t.emitAttachmentAdd,"trix-attachment-remove":t.emitAttachmentRemove,"trix-selection-change":t.emitSelectionChange,"trix-initialize":t.emitInitialize,"trix-before-initialize":t.emitBeforeInitialize,"trix-focus":t.processTrixFocus,"trix-blur":t.processTrixBlur}}),t._v(" "),n("input",{attrs:{type:"hidden",name:t.inputName,id:t.computedId},domProps:{value:t.editorContent}})],1)}var s={name:"VueTrix",mixins:[{methods:{emitFileAccept:function(t){this.$emit("trix-file-accept",t)}}},{methods:{emitInitialize:function(t){this.$emit("trix-initialize",this.$refs.trix.editor,event)}}},{methods:{emitAttachmentAdd:function(t){this.$emit("trix-attachment-add",t)}}},{methods:{emitSelectionChange:function(t){this.$emit("trix-selection-change",this.$refs.trix.editor,t)}}},{methods:{emitAttachmentRemove:function(t){this.$emit("trix-attachment-remove",t)}}},{methods:{emitBeforeInitialize:function(t){this.$emit("trix-before-initialize",this.$refs.trix.editor,t)}}},{methods:{processTrixFocus:function(t){this.$refs.trix&&(this.isActived=!0,this.$emit("trix-focus",this.$refs.trix.editor,t))},processTrixBlur:function(t){this.$refs.trix&&(this.isActived=!1,this.$emit("trix-blur",this.$refs.trix.editor,t))}}}],model:{prop:"srcContent",event:"update"},props:{disabledEditor:{type:Boolean,required:!1,default:function(){return!1}},inputId:{type:String,required:!1,default:function(){return""}},inputName:{type:String,required:!1,default:function(){return"content"}},placeholder:{type:String,required:!1,default:function(){return""}},srcContent:{type:String,required:!1,default:function(){return""}},localStorage:{type:Boolean,required:!1,default:function(){return!1}}},created:function(){if(this.localStorage){var t=localStorage.getItem(this.storageId("VueTrix"));t&&!this.srcContent&&this.$refs.trix.editor.loadJSON(JSON.parse(t))}},mounted:function(){this.decorateDisabledEditor()},data:function(){return{editorContent:this.srcContent,isActived:null}},methods:{handleContentChange:function(t){this.editorContent=t.srcElement?t.srcElement.value:t.target.value,this.$emit("input",this.editorContent)},handleInitialContentChange:function(t,e){t=void 0===t?"":t,this.$refs.trix.editor.innerHTML!==t&&(this.editorContent=t,this.isActived||this.reloadEditorContent(this.editorContent))},emitEditorState:function(t){this.localStorage&&localStorage.setItem(this.storageId("VueTrix"),JSON.stringify(this.$refs.trix.editor)),this.$emit("update",this.editorContent)},storageId:function(t){return this.inputId?t+"."+this.inputId+".content":t+".content"},reloadEditorContent:function(t){this.$refs.trix.editor.loadHTML(t),this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())},getContentEndPosition:function(){return this.$refs.trix.editor.getDocument().toString().length-1},decorateDisabledEditor:function(){this.disabledEditor&&(this.$refs.trix.toolbarElement.style["pointer-events"]="none",this.$refs.trix.style["pointer-events"]="none",this.$refs.trix.style.background="#e9ecef")}},computed:{generateId:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)})},computedId:function(){return this.inputId||this.generateId},initialContent:function(){return this.srcContent}},watch:{editorContent:{handler:"emitEditorState"},initialContent:{handler:"handleInitialContentChange"}}},a=(o._withStripped=!0,r({render:o,staticRenderFns:[]},function(t){t&&(t("data-v-1d431644_0",{source:"\n.src-components-trix_container-2DRb {\r\n  max-width: 100%;\r\n  height: auto;\n}\n.src-components-trix_container-2DRb .src-components-trix-button-group-2Me9 {\r\n  background-color: white;\n}\n.src-components-trix_container-2DRb .src-components-trix-content-3q6f {\r\n  background-color: white;\n}\r\n",map:{version:3,sources:["C:\\Users\\lacambrat\\Development\\vue-trix\\src\\components\\VueTrix.vue"],names:[],mappings:";AAwOA;EACA,eAAA;EACA,YAAA;AACA;AACA;EACA,uBAAA;AACA;AACA;EACA,uBAAA;AACA",file:"VueTrix.vue",sourcesContent:["<template>\r\n  <div :class=\"[$style.trix_container]\">\r\n    <trix-editor\r\n      :contenteditable=\"!disabledEditor\"\r\n      :class=\"['trix-content']\"\r\n      ref=\"trix\"\r\n      :input=\"computedId\"\r\n      :placeholder=\"placeholder\"\r\n      @trix-change=\"handleContentChange\"\r\n      @trix-file-accept=\"emitFileAccept\"\r\n      @trix-attachment-add=\"emitAttachmentAdd\"\r\n      @trix-attachment-remove=\"emitAttachmentRemove\"\r\n      @trix-selection-change=\"emitSelectionChange\"\r\n      @trix-initialize=\"emitInitialize\"\r\n      @trix-before-initialize=\"emitBeforeInitialize\"\r\n      @trix-focus=\"processTrixFocus\"\r\n      @trix-blur=\"processTrixBlur\"\r\n    />\r\n    <input\r\n      type=\"hidden\"\r\n      :name=\"inputName\"\r\n      :id=\"computedId\"\r\n      :value=\"editorContent\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'trix'\r\nimport 'trix/dist/trix.css'\r\nimport EmitFileAccept from '../mixins/EmitFileAccept.js'\r\nimport EmitInitialize from '../mixins/EmitInitialize.js'\r\nimport EmitAttachmentAdd from '../mixins/EmitAttachmentAdd.js'\r\nimport EmitSelectionChange from '../mixins/EmitSelectionChange.js'\r\nimport EmitAttachmentRemove from '../mixins/EmitAttachmentRemove.js'\r\nimport EmitBeforeInitialize from '../mixins/EmitBeforeInitialize.js'\r\nimport ProcessEditorFocusAndBlur from '../mixins/ProcessEditorFocusAndBlur.js'\r\n\r\nexport default {\r\n  name: 'VueTrix',\r\n  mixins: [\r\n    EmitFileAccept(),\r\n    EmitInitialize(),\r\n    EmitAttachmentAdd(),\r\n    EmitSelectionChange(),\r\n    EmitAttachmentRemove(),\r\n    EmitBeforeInitialize(),\r\n    ProcessEditorFocusAndBlur()\r\n  ],\r\n  model: {\r\n    prop: 'srcContent',\r\n    event: 'update'\r\n  },\r\n  props: {\r\n    /**\r\n     * This prop will put the editor in read-only mode\r\n     */\r\n    disabledEditor: {\r\n      type: Boolean,\r\n      required: false,\r\n      default () {\r\n        return false\r\n      }\r\n    },\r\n    /**\r\n     * This is referenced `id` of the hidden input field defined.\r\n     * It is optional and will be a random string by default.\r\n     */\r\n    inputId: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return ''\r\n      }\r\n    },\r\n    /**\r\n     * This is referenced `name` of the hidden input field defined,\r\n     * default value is `content`.\r\n     */\r\n    inputName: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return 'content'\r\n      }\r\n    },\r\n    /**\r\n     * The placeholder attribute specifies a short hint\r\n     * that describes the expected value of a editor.\r\n     */\r\n    placeholder: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return ''\r\n      }\r\n    },\r\n    /**\r\n     * The source content is associcated to v-model directive.\r\n     */\r\n    srcContent: {\r\n      type: String,\r\n      required: false,\r\n      default () {\r\n        return ''\r\n      }\r\n    },\r\n    /**\r\n     * The boolean attribute allows saving editor state into browser's localStorage\r\n     * (optional, default is `false`).\r\n     */\r\n    localStorage: {\r\n      type: Boolean,\r\n      required: false,\r\n      default () {\r\n        return false\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    /**\r\n     *  If localStorage is enabled,\r\n     *  then load editor's content from the beginning.\r\n     */\r\n    if (this.localStorage) {\r\n      const savedValue = localStorage.getItem(this.storageId('VueTrix'))\r\n      if (savedValue && !this.srcContent) {\r\n        this.$refs.trix.editor.loadJSON(JSON.parse(savedValue))\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    /** Check if editor read-only mode is required */\r\n    this.decorateDisabledEditor()\r\n  },\r\n  data () {\r\n    return {\r\n      editorContent: this.srcContent,\r\n      isActived: null\r\n    }\r\n  },\r\n  methods: {\r\n    handleContentChange (event) {\r\n      this.editorContent = event.srcElement ? event.srcElement.value : event.target.value\r\n      this.$emit('input', this.editorContent)\r\n    },\r\n    handleInitialContentChange (newContent, oldContent) {\r\n      newContent = newContent === undefined ? '' : newContent\r\n\r\n      if (this.$refs.trix.editor.innerHTML !== newContent) {\r\n        /* Update editor's content when initial content changed */\r\n        this.editorContent = newContent\r\n\r\n        /**\r\n         *  If user are typing, then don't reload the editor,\r\n         *  hence keep cursor's position after typing.\r\n         */\r\n        if (!this.isActived) {\r\n          this.reloadEditorContent(this.editorContent)\r\n        }\r\n      }\r\n    },\r\n    emitEditorState (value) {\r\n      /**\r\n       * If localStorage is enabled,\r\n       * then save editor's content into storage\r\n       */\r\n      if (this.localStorage) {\r\n        localStorage.setItem(\r\n          this.storageId('VueTrix'),\r\n          JSON.stringify(this.$refs.trix.editor)\r\n        )\r\n      }\r\n      this.$emit('update', this.editorContent)\r\n    },\r\n    storageId (component) {\r\n      if (this.inputId) {\r\n        return `${component}.${this.inputId}.content`\r\n      } else {\r\n        return `${component}.content`\r\n      }\r\n    },\r\n    reloadEditorContent (newContent) {\r\n      // Reload HTML content\r\n      this.$refs.trix.editor.loadHTML(newContent)\r\n\r\n      // Move cursor to end of new content updated\r\n      this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())\r\n    },\r\n    getContentEndPosition () {\r\n      return this.$refs.trix.editor.getDocument().toString().length - 1\r\n    },\r\n    decorateDisabledEditor () {\r\n      /** Disable toolbar and editor by pointer events styling */\r\n      if (this.disabledEditor) {\r\n        this.$refs.trix.toolbarElement.style['pointer-events'] = 'none'\r\n        this.$refs.trix.style['pointer-events'] = 'none'\r\n        this.$refs.trix.style['background'] = '#e9ecef'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * Compute a random id of hidden input\r\n     * when it haven't been specified.\r\n     */\r\n    generateId () {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        var r = Math.random() * 16 | 0\r\n        var v = c === 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n      })\r\n    },\r\n    computedId () {\r\n      return this.inputId || this.generateId\r\n    },\r\n    initialContent () {\r\n      return this.srcContent\r\n    }\r\n  },\r\n  watch: {\r\n    editorContent: {\r\n      handler: 'emitEditorState'\r\n    },\r\n    initialContent: {\r\n      handler: 'handleInitialContentChange'\r\n    }\r\n  }\r\n}\r\n<\/script>\r\n\r\n<style lang=\"css\" module>\r\n.trix_container {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n.trix_container .trix-button-group {\r\n  background-color: white;\r\n}\r\n.trix_container .trix-content {\r\n  background-color: white;\r\n}\r\n</style>\r\n"]},media:void 0}),Object.defineProperty(this,"$style",{value:{trix_container:"src-components-trix_container-2DRb","trix-button-group":"src-components-trix-button-group-2Me9","trix-content":"src-components-trix-content-3q6f"}}))},s,void 0,!(o._withStripped=!0),void 0,!1,i,void 0,void 0));return t.config.ignoredElements=["trix-editor"],t.component(a.name,a),a}(Vue,0,0,__vue_normalize__,__vue_create_injector__);
//# sourceMappingURL=vue-trix.min.js.map
