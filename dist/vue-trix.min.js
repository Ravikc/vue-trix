var VueTrix=function(t,e,n,i){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;function r(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{class:[t.$style.trix_container]},[n("trix-editor",{ref:"trix",class:["trix-content"],attrs:{contenteditable:!t.disabledEditor,input:t.computedId,placeholder:t.placeholder},on:{"trix-change":t.handleContentChange,"trix-file-accept":t.emitFileAccept,"trix-attachment-add":t.emitAttachmentAdd,"trix-attachment-remove":t.emitAttachmentRemove,"trix-selection-change":t.emitSelectionChange,"trix-initialize":t.emitInitialize,"trix-before-initialize":t.emitBeforeInitialize,"trix-focus":t.processTrixFocus,"trix-blur":t.processTrixBlur}}),t._v(" "),n("input",{attrs:{type:"hidden",name:t.inputName,id:t.computedId},domProps:{value:t.editorContent}})],1)}var o={name:"VueTrix",mixins:[{methods:{emitFileAccept:function(t){this.$emit("trix-file-accept",t)}}},{methods:{emitInitialize:function(t){this.$emit("trix-initialize",this.$refs.trix.editor,event)}}},{methods:{emitAttachmentAdd:function(t){this.$emit("trix-attachment-add",t)}}},{methods:{emitSelectionChange:function(t){this.$emit("trix-selection-change",this.$refs.trix.editor,t)}}},{methods:{emitAttachmentRemove:function(t){this.$emit("trix-attachment-remove",t)}}},{methods:{emitBeforeInitialize:function(t){this.$emit("trix-before-initialize",this.$refs.trix.editor,t)}}},{methods:{processTrixFocus:function(t){this.$refs.trix&&(this.isActived=!0,this.$emit("trix-focus",this.$refs.trix.editor,t))},processTrixBlur:function(t){this.$refs.trix&&(this.isActived=!1,this.$emit("trix-blur",this.$refs.trix.editor,t))}}}],model:{prop:"srcContent",event:"update"},props:{disabledEditor:{type:Boolean,required:!1,default:function(){return!1}},inputId:{type:String,required:!1,default:function(){return""}},inputName:{type:String,required:!1,default:function(){return"content"}},placeholder:{type:String,required:!1,default:function(){return""}},srcContent:{type:String,required:!1,default:function(){return""}},localStorage:{type:Boolean,required:!1,default:function(){return!1}}},created:function(){if(this.localStorage){var t=localStorage.getItem(this.storageId("VueTrix"));t&&!this.srcContent&&this.$refs.trix.editor.loadJSON(JSON.parse(t))}},mounted:function(){this.decorateDisabledEditor()},data:function(){return{editorContent:this.srcContent,isActived:null}},methods:{handleContentChange:function(t){this.editorContent=t.srcElement?t.srcElement.value:t.target.value,this.$emit("input",this.editorContent)},handleInitialContentChange:function(t,e){t=void 0===t?"":t,this.$refs.trix.editor.innerHTML!==t&&(this.editorContent=t,this.isActived||this.reloadEditorContent(this.editorContent))},emitEditorState:function(t){this.localStorage&&localStorage.setItem(this.storageId("VueTrix"),JSON.stringify(this.$refs.trix.editor)),this.$emit("update",this.editorContent)},storageId:function(t){return this.inputId?t+"."+this.inputId+".content":t+".content"},reloadEditorContent:function(t){this.$refs.trix.editor.loadHTML(t),this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())},getContentEndPosition:function(){return this.$refs.trix.editor.getDocument().toString().length-1},decorateDisabledEditor:function(){this.disabledEditor&&(this.$refs.trix.toolbarElement.style["pointer-events"]="none",this.$refs.trix.style["pointer-events"]="none",this.$refs.trix.style.background="#e9ecef")}},computed:{generateId:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)})},computedId:function(){return this.inputId||this.generateId},initialContent:function(){return this.srcContent}},watch:{editorContent:{handler:"emitEditorState"},initialContent:{handler:"handleInitialContentChange"}}},s=(r._withStripped=!0,i.normalizeComponent({render:r,staticRenderFns:[]},function(t){t&&(t("data-v-f78ed75c_0",{source:"\n.src-components-trix_container-5Bcy {\n  max-width: 100%;\n  height: auto;\n}\n.src-components-trix_container-5Bcy .src-components-trix-button-group-2D-J {\n  background-color: white;\n}\n.src-components-trix_container-5Bcy .src-components-trix-content-1TD_ {\n  background-color: white;\n}\n",map:{version:3,sources:["/Users/hanhdt/Workspace/side-projects/vuejs/vue-trix/src/components/VueTrix.vue"],names:[],mappings:";AAwOA;EACA,eAAA;EACA,YAAA;AACA;AACA;EACA,uBAAA;AACA;AACA;EACA,uBAAA;AACA",file:"VueTrix.vue",sourcesContent:["<template>\n  <div :class=\"[$style.trix_container]\">\n    <trix-editor\n      :contenteditable=\"!disabledEditor\"\n      :class=\"['trix-content']\"\n      ref=\"trix\"\n      :input=\"computedId\"\n      :placeholder=\"placeholder\"\n      @trix-change=\"handleContentChange\"\n      @trix-file-accept=\"emitFileAccept\"\n      @trix-attachment-add=\"emitAttachmentAdd\"\n      @trix-attachment-remove=\"emitAttachmentRemove\"\n      @trix-selection-change=\"emitSelectionChange\"\n      @trix-initialize=\"emitInitialize\"\n      @trix-before-initialize=\"emitBeforeInitialize\"\n      @trix-focus=\"processTrixFocus\"\n      @trix-blur=\"processTrixBlur\"\n    />\n    <input\n      type=\"hidden\"\n      :name=\"inputName\"\n      :id=\"computedId\"\n      :value=\"editorContent\"\n    />\n  </div>\n</template>\n\n<script>\nimport 'trix'\nimport 'trix/dist/trix.css'\nimport EmitFileAccept from '../mixins/EmitFileAccept.js'\nimport EmitInitialize from '../mixins/EmitInitialize.js'\nimport EmitAttachmentAdd from '../mixins/EmitAttachmentAdd.js'\nimport EmitSelectionChange from '../mixins/EmitSelectionChange.js'\nimport EmitAttachmentRemove from '../mixins/EmitAttachmentRemove.js'\nimport EmitBeforeInitialize from '../mixins/EmitBeforeInitialize.js'\nimport ProcessEditorFocusAndBlur from '../mixins/ProcessEditorFocusAndBlur.js'\n\nexport default {\n  name: 'VueTrix',\n  mixins: [\n    EmitFileAccept(),\n    EmitInitialize(),\n    EmitAttachmentAdd(),\n    EmitSelectionChange(),\n    EmitAttachmentRemove(),\n    EmitBeforeInitialize(),\n    ProcessEditorFocusAndBlur()\n  ],\n  model: {\n    prop: 'srcContent',\n    event: 'update'\n  },\n  props: {\n    /**\n     * This prop will put the editor in read-only mode\n     */\n    disabledEditor: {\n      type: Boolean,\n      required: false,\n      default () {\n        return false\n      }\n    },\n    /**\n     * This is referenced `id` of the hidden input field defined.\n     * It is optional and will be a random string by default.\n     */\n    inputId: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * This is referenced `name` of the hidden input field defined,\n     * default value is `content`.\n     */\n    inputName: {\n      type: String,\n      required: false,\n      default () {\n        return 'content'\n      }\n    },\n    /**\n     * The placeholder attribute specifies a short hint\n     * that describes the expected value of a editor.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * The source content is associcated to v-model directive.\n     */\n    srcContent: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * The boolean attribute allows saving editor state into browser's localStorage\n     * (optional, default is `false`).\n     */\n    localStorage: {\n      type: Boolean,\n      required: false,\n      default () {\n        return false\n      }\n    }\n  },\n  created () {\n    /**\n     *  If localStorage is enabled,\n     *  then load editor's content from the beginning.\n     */\n    if (this.localStorage) {\n      const savedValue = localStorage.getItem(this.storageId('VueTrix'))\n      if (savedValue && !this.srcContent) {\n        this.$refs.trix.editor.loadJSON(JSON.parse(savedValue))\n      }\n    }\n  },\n  mounted () {\n    /** Check if editor read-only mode is required */\n    this.decorateDisabledEditor()\n  },\n  data () {\n    return {\n      editorContent: this.srcContent,\n      isActived: null\n    }\n  },\n  methods: {\n    handleContentChange (event) {\n      this.editorContent = event.srcElement ? event.srcElement.value : event.target.value\n      this.$emit('input', this.editorContent)\n    },\n    handleInitialContentChange (newContent, oldContent) {\n      newContent = newContent === undefined ? '' : newContent\n\n      if (this.$refs.trix.editor.innerHTML !== newContent) {\n        /* Update editor's content when initial content changed */\n        this.editorContent = newContent\n\n        /**\n         *  If user are typing, then don't reload the editor,\n         *  hence keep cursor's position after typing.\n         */\n        if (!this.isActived) {\n          this.reloadEditorContent(this.editorContent)\n        }\n      }\n    },\n    emitEditorState (value) {\n      /**\n       * If localStorage is enabled,\n       * then save editor's content into storage\n       */\n      if (this.localStorage) {\n        localStorage.setItem(\n          this.storageId('VueTrix'),\n          JSON.stringify(this.$refs.trix.editor)\n        )\n      }\n      this.$emit('update', this.editorContent)\n    },\n    storageId (component) {\n      if (this.inputId) {\n        return `${component}.${this.inputId}.content`\n      } else {\n        return `${component}.content`\n      }\n    },\n    reloadEditorContent (newContent) {\n      // Reload HTML content\n      this.$refs.trix.editor.loadHTML(newContent)\n\n      // Move cursor to end of new content updated\n      this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())\n    },\n    getContentEndPosition () {\n      return this.$refs.trix.editor.getDocument().toString().length - 1\n    },\n    decorateDisabledEditor () {\n      /** Disable toolbar and editor by pointer events styling */\n      if (this.disabledEditor) {\n        this.$refs.trix.toolbarElement.style['pointer-events'] = 'none'\n        this.$refs.trix.style['pointer-events'] = 'none'\n        this.$refs.trix.style['background'] = '#e9ecef'\n      }\n    }\n  },\n  computed: {\n    /**\n     * Compute a random id of hidden input\n     * when it haven't been specified.\n     */\n    generateId () {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = Math.random() * 16 | 0\n        var v = c === 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n      })\n    },\n    computedId () {\n      return this.inputId || this.generateId\n    },\n    initialContent () {\n      return this.srcContent\n    }\n  },\n  watch: {\n    editorContent: {\n      handler: 'emitEditorState'\n    },\n    initialContent: {\n      handler: 'handleInitialContentChange'\n    }\n  }\n}\n<\/script>\n\n<style lang=\"css\" module>\n.trix_container {\n  max-width: 100%;\n  height: auto;\n}\n.trix_container .trix-button-group {\n  background-color: white;\n}\n.trix_container .trix-content {\n  background-color: white;\n}\n</style>\n"]},media:void 0}),Object.defineProperty(this,"$style",{value:{trix_container:"src-components-trix_container-5Bcy","trix-button-group":"src-components-trix-button-group-2D-J","trix-content":"src-components-trix-content-1TD_"}}))},o,void 0,!(r._withStripped=!0),void 0,!1,i.createInjector,void 0,void 0));return t.config.ignoredElements=["trix-editor"],t.component(s.name,s),s}(Vue,0,0,vueRuntimeHelpers);
//# sourceMappingURL=vue-trix.min.js.map
